# Generated by Django 5.1.4 on 2025-01-06 10:01

import datetime
import django.db.models.deletion
import frontline.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('username', models.CharField(blank=True, max_length=60, unique=True, verbose_name='username')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Parent', 'Parent'), ('Student', 'Student'), ('Teacher', 'Teacher')], db_index=True, max_length=7)),
                ('school_name', models.CharField(blank=True, db_index=True, max_length=200, null=True)),
                ('first_name', models.CharField(blank=True, max_length=200, verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=200, verbose_name='last_name')),
                ('approved', models.BooleanField(default=False, verbose_name='approved')),
                ('verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'CustomUser',
                'verbose_name_plural': 'CustomUser',
            },
        ),
        migrations.CreateModel(
            name='Academic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=105, unique=True, verbose_name='Academic Year')),
                ('start_date', models.DateField(default=datetime.date.today)),
                ('end_date', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('body', models.TextField(max_length=150)),
                ('audiences', models.CharField(choices=[('Parents', 'Parents'), ('Teachers', 'Teachers'), ('Students', 'Students'), ('Everyone', 'Everyone')], default='Everyone', max_length=8)),
                ('priority', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3')], default='1', max_length=1, verbose_name='priority')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_modified', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Announcements',
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(max_length=180)),
                ('event_tags', models.CharField(choices=[('examination', 'Examination'), ('holiday', 'Holiday'), ('meeting', 'Meeting'), ('extracurricular', 'Extracurricular'), ('workshop', 'Workshop'), ('graduation', 'Graduation'), ('festival', 'Festival')], max_length=15)),
                ('start_time', models.DateTimeField(default=datetime.datetime.now)),
                ('end_time', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=100)),
                ('completed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='SubClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('order', models.PositiveIntegerField(default=1, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='last modified')),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='school', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='school profile')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('logo', models.URLField(blank=True, default='https://my-bucket.s3.amazonaws.com/my-folder/my-image.jpg?AWSAccessKeyId=EXAMPLE&Expires=1672531199&Signature=abcdef', max_length=1000, verbose_name='logo')),
                ('pricing', models.CharField(choices=[('Basic', 'Basic'), ('Pro', 'Pro'), ('Enterprise', 'Enterprise')], max_length=10)),
                ('subdomain_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='staff', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('fullname', models.CharField(blank=True, default='', max_length=200)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField()),
            ],
            options={
                'verbose_name_plural': 'staff',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User Profile')),
                ('profile_picture', models.URLField(blank=True, default='https://my-bucket.s3.amazonaws.com/my-folder/my-image.jpg?AWSAccessKeyId=EXAMPLE&Expires=1672531199&Signature=abcdef', max_length=1000, verbose_name='profile picture')),
                ('firstname', models.CharField(blank=True, max_length=200)),
                ('lastname', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(editable=False, max_length=254)),
                ('address', models.CharField(blank=True, max_length=150)),
            ],
            options={
                'verbose_name_plural': 'User Profile',
            },
        ),
        migrations.CreateModel(
            name='Approvals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(default='', max_length=200)),
                ('lastname', models.CharField(default='', max_length=200)),
                ('email', models.EmailField(editable=False, max_length=254)),
                ('approved', models.BooleanField()),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name_plural': 'Approvals',
            },
        ),
        migrations.CreateModel(
            name='StudentClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now=True)),
                ('Grade', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='frontline.subclasses', verbose_name='associated grade')),
            ],
            options={
                'verbose_name_plural': 'student classes',
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name of subject')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('classes', models.ManyToManyField(to='frontline.subclasses', verbose_name='Classes')),
                ('supervisors', models.ManyToManyField(blank=True, to='frontline.staff')),
            ],
            options={
                'verbose_name_plural': 'subjects',
            },
        ),
        migrations.AddField(
            model_name='subclasses',
            name='supervisors',
            field=models.ManyToManyField(blank=True, related_name='supervisors', to='frontline.staff'),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('fullname', models.CharField(blank=True, default='', max_length=200)),
                ('my_passkey', models.CharField(blank=True, max_length=10)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('student_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='frontline.subclasses', verbose_name='Student class')),
            ],
            options={
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='Parents',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='parent', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('fullname', models.CharField(blank=True, default='', max_length=200)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField()),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('wards', models.ManyToManyField(blank=True, to='frontline.student')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, default=datetime.date.today)),
                ('status', models.CharField(choices=[('Absent', 'Absent'), ('Present', 'Present')], max_length=7)),
                ('academic_calendar', models.ForeignKey(default=frontline.models.get_active_academic, on_delete=django.db.models.deletion.RESTRICT, to='frontline.academic', verbose_name='calendar')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='frontline.student', verbose_name='student')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('date', 'student', 'academic_calendar'), name='unique_attendance_per_student_per_date')],
            },
        ),
        migrations.CreateModel(
            name='Assessment_records',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exams_score', models.PositiveIntegerField(verbose_name='Exams Score')),
                ('class_score', models.PositiveIntegerField(verbose_name='Class Score')),
                ('total_score', models.PositiveIntegerField(blank=True, verbose_name='Total Score')),
                ('grade', models.CharField(blank=True, editable=False, max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('academic_year', models.ForeignKey(default=frontline.models.get_active_academic, on_delete=django.db.models.deletion.RESTRICT, to='frontline.academic', verbose_name='academic year')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='frontline.subjects', verbose_name='subject')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='frontline.student', verbose_name='student')),
            ],
            options={
                'verbose_name_plural': 'Assessment Records',
                'constraints': [models.UniqueConstraint(fields=('student', 'subject', 'academic_year'), name='Student Must have a unique assessment subject and academic year')],
            },
        ),
    ]
